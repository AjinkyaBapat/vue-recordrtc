!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["vue-recordrtc"]=t():e["vue-recordrtc"]=t()}(this,function(){return function(e){function t(o){if(i[o])return i[o].exports;var n=i[o]={exports:{},id:o,loaded:!1};return e[o].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){var o,n,r={};i(8),o=i(1),n=i(6),e.exports=o||{},e.exports.__esModule&&(e.exports=e.exports.default);var a="function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports;n&&(a.template=n),a.computed||(a.computed={}),Object.keys(r).forEach(function(e){var t=r[e];a.computed[e]=function(){return t}})},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=i(5);t.default={mounted:function(){var e=o({},{type:"video",recorderType:o.WhammyRecorder});console.log("\n--------\nRecordRTC\n--------\n"),console.log(e)}}},function(e,t,i){t=e.exports=i(3)(),t.push([e.id,"",""])},function(e,t){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],t=0;t<this.length;t++){var i=this[t];i[2]?e.push("@media "+i[2]+"{"+i[1]+"}"):e.push(i[1])}return e.join("")},e.i=function(t,i){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},n=0;n<this.length;n++){var r=this[n][0];"number"==typeof r&&(o[r]=!0)}for(n=0;n<t.length;n++){var a=t[n];"number"==typeof a[0]&&o[a[0]]||(i&&!a[2]?a[2]=i:i&&(a[2]="("+a[2]+") and ("+i+")"),e.push(a))}},e}},function(e,t){function i(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function n(e){if(u===setTimeout)return setTimeout(e,0);if((u===i||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function r(e){if(f===clearTimeout)return clearTimeout(e);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(e);try{return f(e)}catch(t){try{return f.call(null,e)}catch(t){return f.call(this,e)}}}function a(){m&&h&&(m=!1,h.length?p=h.concat(p):g=-1,p.length&&d())}function d(){if(!m){var e=n(a);m=!0;for(var t=p.length;t;){for(h=p,p=[];++g<t;)h&&h[g].run();g=-1,t=p.length}h=null,m=!1,r(e)}}function s(e,t){this.fun=e,this.array=t}function c(){}var u,f,l=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:i}catch(e){u=i}try{f="function"==typeof clearTimeout?clearTimeout:o}catch(e){f=o}}();var h,p=[],m=!1,g=-1;l.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];p.push(new s(e,t)),1!==p.length||m||n(d)},s.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=c,l.addListener=c,l.once=c,l.off=c,l.removeListener=c,l.removeAllListeners=c,l.emit=c,l.prependListener=c,l.prependOnceListener=c,l.listeners=function(e){return[]},l.binding=function(e){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(e){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},function(e,t,i){var o,n;(function(i,r){"use strict";/**
	 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
	 * @summary Record audio, video or screen inside the browser.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef RecordRTC
	 * @class
	 * @example
	 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
	 *     type: 'video', // audio or video or gif or canvas
	 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
	 * });
	 * recorder.startRecording();
	 * @see For further information:
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
	 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
	 */
function a(e,t){function i(){return t.disableLogs||console.log("started recording "+t.type+" stream."),g?(g.clearRecordedData(),g.record(),m("recording"),v.recordingDuration&&p(),v):(o(function(){v.recordingDuration&&p()}),v)}function o(i){i&&(t.initCallback=function(){i(),i=t.initCallback=null});var o=new s(e,t);g=new o(e,t),g.record(),m("recording"),t.disableLogs||console.log("Initialized recorderType:",g.constructor.name,"for output-type:",t.type)}function n(e){function i(i){Object.keys(g).forEach(function(e){"function"!=typeof g[e]&&(v[e]=g[e])});var o=g.blob;if(!o){if(!i)throw"Recording failed.";g.blob=o=i}if(e){var n=A.createObjectURL(o);"function"==typeof e.call?e.call(v,n):e(n)}o&&!t.disableLogs&&console.log(o.type,"->",u(o.size)),t.autoWriteToDisk&&h(function(e){var i={};i[t.type+"Blob"]=e,E.Store(i)})}return g?"paused"===v.state?(v.resumeRecording(),void setTimeout(function(){n(e)},1)):"recording"!==v.state?void(t.disableLogs||console.warn("Unable to stop the recording. Recording state: ",v.state)):(t.disableLogs||console.warn("Stopped recording "+t.type+" stream."),"gif"!==t.type?g.stop(i):(g.stop(),i()),void m("stopped")):console.warn(b)}function r(){return g?"recording"!==v.state?void(t.disableLogs||console.warn("Unable to pause the recording. Recording state: ",v.state)):(m("paused"),g.pause(),void(t.disableLogs||console.log("Paused recording."))):console.warn(b)}function c(){return g?"paused"!==v.state?void(t.disableLogs||console.warn("Unable to resume the recording. Recording state: ",v.state)):(m("recording"),g.resume(),void(t.disableLogs||console.log("Resumed recording."))):console.warn(b)}function l(e){postMessage((new FileReaderSync).readAsDataURL(e))}function h(e,i){function o(e){var t=A.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),i=new Worker(t);return A.revokeObjectURL(t),i}if(!e)throw"Pass a callback function over getDataURL.";var n=i?i.blob:(g||{}).blob;if(!n)return t.disableLogs||console.warn("Blob encoder did not finish its job yet."),void setTimeout(function(){h(e,i)},1e3);if("undefined"==typeof Worker||navigator.mozGetUserMedia){var r=new FileReader;r.readAsDataURL(n),r.onload=function(t){e(t.target.result)}}else{var a=o(l);a.onmessage=function(t){e(t.data)},a.postMessage(n)}}function p(e){if(e=e||0,"paused"===v.state)return void setTimeout(function(){p(e)},1e3);if("stopped"!==v.state){if(e>=v.recordingDuration)return void n(v.onRecordingStopped);e+=1e3,setTimeout(function(){p(e)},1e3)}}function m(e){v.state=e,"function"==typeof v.onStateChanged.call?v.onStateChanged.call(v,e):v.onStateChanged(e)}if(!e)throw"First parameter is required.";t=t||{type:"video"},t=new d(e,t);var g,v=this,b='It seems that "startRecording" is not invoked for '+t.type+" recorder.",y={startRecording:i,stopRecording:n,pauseRecording:r,resumeRecording:c,initRecorder:o,setRecordingDuration:function(e,t){if("undefined"==typeof e)throw"recordingDuration is required.";if("number"!=typeof e)throw"recordingDuration must be a number.";return v.recordingDuration=e,v.onRecordingStopped=t||function(){},{onRecordingStopped:function(e){v.onRecordingStopped=e}}},clearRecordedData:function(){return g?(g.clearRecordedData(),void(t.disableLogs||console.log("Cleared old recorded data."))):console.warn(b)},getBlob:function(){return g?g.blob:console.warn(b)},getDataURL:h,toURL:function(){return g?A.createObjectURL(g.blob):console.warn(b)},getInternalRecorder:function(){return g},save:function(e){return g?void f(g.blob,e):console.warn(b)},getFromDisk:function(e){return g?void a.getFromDisk(t.type,e):console.warn(b)},setAdvertisementArray:function(e){t.advertisement=[];for(var i=e.length,o=0;o<i;o++)t.advertisement.push({duration:o,image:e[o]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){g&&"function"==typeof g.clearRecordedData&&g.clearRecordedData(),g=null,m("inactive"),v.blob=null},onStateChanged:function(e){t.disableLogs||console.log("Recorder state changed:",e)},state:"inactive",getState:function(){return v.state}};if(!this)return v=y,y;for(var w in y)this[w]=y[w];return v=this,y}/**
	 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
	 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef RecordRTCConfiguration
	 * @class
	 * @example
	 * var options = RecordRTCConfiguration(mediaStream, options);
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
	 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
	 */
function d(e,t){return t.recorderType&&!t.type&&(t.recorderType===b||t.recorderType===v?t.type="video":t.recorderType===y?t.type="gif":t.recorderType===g?t.type="audio":t.recorderType===m&&(e.getAudioTracks().length&&e.getVideoTracks().length?t.type="video":e.getAudioTracks().length&&!e.getVideoTracks().length?t.type="audio":!e.getAudioTracks().length&&e.getVideoTracks().length&&(t.type="audio"))),"undefined"!=typeof m&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(t.mimeType||(t.mimeType="video/webm"),t.type||(t.type=t.mimeType.split("/")[0]),!t.bitsPerSecond),t.type||(t.mimeType&&(t.type=t.mimeType.split("/")[0]),t.type||(t.type="audio")),t}/**
	 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
	 * @summary It returns best recorder-type available for your browser.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef GetRecorderType
	 * @class
	 * @example
	 * var RecorderType = GetRecorderType(options);
	 * var recorder = new RecorderType(options);
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
	 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
	 */
function s(e,t){var i;return(D||U||x)&&(i=g),"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&!D&&(i=m),"video"===t.type&&(D||x)&&(i=b),"gif"===t.type&&(i=y),"canvas"===t.type&&(i=v),p()&&i!==v&&i!==y&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(e.getVideoTracks&&e.getVideoTracks().length||e.getAudioTracks&&e.getAudioTracks().length)&&("audio"===t.type?"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("audio/webm")&&(i=m):"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("video/webm")&&(i=m)),t.recorderType&&(i=t.recorderType),e instanceof Array&&e.length&&(i=R),!t.disableLogs&&i&&i.name&&console.log("Using recorderType:",i.name||i.constructor.name),i}/**
	 * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
	 * @summary MRecordRTC stands for "Multiple-RecordRTC".
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef MRecordRTC
	 * @class
	 * @example
	 * var recorder = new MRecordRTC();
	 * recorder.addStream(MediaStream);
	 * recorder.mediaType = {
	 *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
	 *     video: true, // or WhammyRecorder or MediaStreamRecorder
	 *     gif: true    // or GifRecorder
	 * };
	 * // mimeType is optional and should be set only in advance cases.
	 * recorder.mimeType = {
	 *     audio: 'audio/wav',
	 *     video: 'video/webm',
	 *     gif:   'image/gif'
	 * };
	 * recorder.startRecording();
	 * @see For further information:
	 * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
	 * @requires {@link RecordRTC}
	 */
function c(e){this.addStream=function(t){t&&(e=t)},this.mediaType={audio:!0,video:!0},this.startRecording=function(){var t,i=this.mediaType,o=this.mimeType||{audio:null,video:null,gif:null};if("function"!=typeof i.audio&&p()&&e.getAudioTracks&&!e.getAudioTracks().length&&(i.audio=!1),"function"!=typeof i.video&&p()&&e.getVideoTracks&&!e.getVideoTracks().length&&(i.video=!1),"function"!=typeof i.gif&&p()&&e.getVideoTracks&&!e.getVideoTracks().length&&(i.gif=!1),!i.audio&&!i.video&&!i.gif)throw"MediaStream must have either audio or video tracks.";if(i.audio&&(t=null,"function"==typeof i.audio&&(t=i.audio),this.audioRecorder=new a(e,{type:"audio",bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:t,mimeType:o.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),i.video||this.audioRecorder.startRecording()),i.video){t=null,"function"==typeof i.video&&(t=i.video);var n=e;if(p()&&i.audio&&"function"==typeof i.audio){var r=e.getVideoTracks()[0];navigator.mozGetUserMedia?(n=new B,n.addTrack(r),t&&t===b&&(t=m)):n=new B([r])}this.videoRecorder=new a(n,{type:"video",video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:t,mimeType:o.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),i.audio||this.videoRecorder.startRecording()}if(i.audio&&i.video){var d=this;p()?(d.audioRecorder=null,d.videoRecorder.startRecording()):d.videoRecorder.initRecorder(function(){d.audioRecorder.initRecorder(function(){d.videoRecorder.startRecording(),d.audioRecorder.startRecording()})})}i.gif&&(t=null,"function"==typeof i.gif&&(t=i.gif),this.gifRecorder=new a(e,{type:"gif",frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:t,mimeType:o.gif}),this.gifRecorder.startRecording())},this.stopRecording=function(e){e=e||function(){},this.audioRecorder&&this.audioRecorder.stopRecording(function(t){e(t,"audio")}),this.videoRecorder&&this.videoRecorder.stopRecording(function(t){e(t,"video")}),this.gifRecorder&&this.gifRecorder.stopRecording(function(t){e(t,"gif")})},this.pauseRecording=function(){this.audioRecorder&&this.audioRecorder.pauseRecording(),this.videoRecorder&&this.videoRecorder.pauseRecording(),this.gifRecorder&&this.gifRecorder.pauseRecording()},this.resumeRecording=function(){this.audioRecorder&&this.audioRecorder.resumeRecording(),this.videoRecorder&&this.videoRecorder.resumeRecording(),this.gifRecorder&&this.gifRecorder.resumeRecording()},this.getBlob=function(e){var t={};return this.audioRecorder&&(t.audio=this.audioRecorder.getBlob()),this.videoRecorder&&(t.video=this.videoRecorder.getBlob()),this.gifRecorder&&(t.gif=this.gifRecorder.getBlob()),e&&e(t),t},this.getDataURL=function(e){function t(e,t){if("undefined"!=typeof Worker){var o=i(function(e){postMessage((new FileReaderSync).readAsDataURL(e))});o.onmessage=function(e){t(e.data)},o.postMessage(e)}else{var n=new FileReader;n.readAsDataURL(e),n.onload=function(e){t(e.target.result)}}}function i(e){var t,i=A.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),o=new Worker(i);if("undefined"!=typeof A)t=A;else{if("undefined"==typeof webkitURL)throw"Neither URL nor webkitURL detected.";t=webkitURL}return t.revokeObjectURL(i),o}this.getBlob(function(i){i.audio&&i.video?t(i.audio,function(o){t(i.video,function(t){e({audio:o,video:t})})}):i.audio?t(i.audio,function(t){e({audio:t})}):i.video&&t(i.video,function(t){e({video:t})})})},this.writeToDisk=function(){a.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder})},this.save=function(e){e=e||{audio:!0,video:!0,gif:!0},e.audio&&this.audioRecorder&&this.audioRecorder.save("string"==typeof e.audio?e.audio:""),e.video&&this.videoRecorder&&this.videoRecorder.save("string"==typeof e.video?e.video:""),e.gif&&this.gifRecorder&&this.gifRecorder.save("string"==typeof e.gif?e.gif:"")}}function u(e){var t=1e3,i=["Bytes","KB","MB","GB","TB"];if(0===e)return"0 Bytes";var o=parseInt(Math.floor(Math.log(e)/Math.log(t)),10);return(e/Math.pow(t,o)).toPrecision(3)+" "+i[o]}function f(e,t){if(!e)throw"Blob object is required.";if(!e.type)try{e.type="video/webm"}catch(e){}var i=(e.type||"video/webm").split("/")[1];if(t&&t.indexOf(".")!==-1){var o=t.split(".");t=o[0],i=o[1]}var n=(t||Math.round(9999999999*Math.random())+888888888)+"."+i;if("undefined"!=typeof navigator.msSaveOrOpenBlob)return navigator.msSaveOrOpenBlob(e,n);if("undefined"!=typeof navigator.msSaveBlob)return navigator.msSaveBlob(e,n);var r=document.createElement("a");r.href=A.createObjectURL(e),r.download=n,r.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(r),"function"==typeof r.click?r.click():(r.target="_blank",r.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),A.revokeObjectURL(r.href)}function l(){return"undefined"!=typeof window&&"object"==typeof window.process&&"renderer"===window.process.type||(!("undefined"==typeof r||"object"!=typeof r.versions||!r.versions.electron)||"object"==typeof navigator&&"string"==typeof navigator.userAgent&&navigator.userAgent.indexOf("Electron")>=0)}function h(e,t,i){if("createObjectURL"in A&&!i)try{t.src=A.createObjectURL(e)}catch(i){return void h(e,t,!0)}else"srcObject"in t?t.srcObject=e:"mozSrcObject"in t?t.mozSrcObject=e:alert("createObjectURL/srcObject both are not supported.")}function p(){var e=!!window.opera||navigator.userAgent.indexOf(" OPR/")>=0,t=!!window.chrome&&!e||l(),i="undefined"!=typeof window.InstallTrigger;if(i)return!0;var o,n,r=(navigator.appVersion,navigator.userAgent),a=""+parseFloat(navigator.appVersion),d=parseInt(navigator.appVersion,10);return(t||e)&&(o=r.indexOf("Chrome"),a=r.substring(o+7)),(n=a.indexOf(";"))!==-1&&(a=a.substring(0,n)),(n=a.indexOf(" "))!==-1&&(a=a.substring(0,n)),d=parseInt(""+a,10),isNaN(d)&&(a=""+parseFloat(navigator.appVersion),d=parseInt(navigator.appVersion,10)),d>=49}/**
	 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
	 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link https://github.com/muaz-khan|Muaz Khan}
	 * @typedef MediaStreamRecorder
	 * @class
	 * @example
	 * var config = {
	 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
	 *     audioBitsPerSecond : 256 * 8 * 1024,
	 *     videoBitsPerSecond : 256 * 8 * 1024,
	 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
	 *     checkForInactiveTracks: true,
	 *     timeSlice: 1000, // concatenate intervals based blobs
	 *     ondataavailable: function() {}, // get intervals based blobs
	 *     ignoreMutedMedia: true
	 * }
	 * var recorder = new MediaStreamRecorder(mediaStream, config);
	 * recorder.record();
	 * recorder.stop(function(blob) {
	 *     video.src = URL.createObjectURL(blob);
	 *
	 *     // or
	 *     var blob = recorder.blob;
	 * });
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
	 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
	 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
	 */
function m(e,t){function i(){n.timestamps.push((new Date).getTime()),"function"==typeof t.onTimeStamp&&t.onTimeStamp(n.timestamps[n.timestamps.length-1],n.timestamps)}function o(){if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}var n=this;if("undefined"==typeof e)throw'First argument "MediaStream" is required.';if("undefined"==typeof MediaRecorder)throw"Your browser does not supports Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";if(t=t||{mimeType:"video/webm"},"audio"===t.type){if(e.getVideoTracks().length&&e.getAudioTracks().length){var r;navigator.mozGetUserMedia?(r=new B,r.addTrack(e.getAudioTracks()[0])):r=new B(e.getAudioTracks()),e=r}t.mimeType&&t.mimeType.toString().toLowerCase().indexOf("audio")!==-1||(t.mimeType=D?"audio/webm":"audio/ogg"),t.mimeType&&"audio/ogg"!==t.mimeType.toString().toLowerCase()&&navigator.mozGetUserMedia&&(t.mimeType="audio/ogg")}var a=[];this.getArrayOfBlobs=function(){return a},this.record=function(){n.blob=null,n.clearRecordedData(),n.timestamps=[],s=[],a=[];var o=t;t.disableLogs||console.log("Passing following config over MediaRecorder API.",o),d&&(d=null),D&&!p()&&(o="video/vp8"),"function"==typeof MediaRecorder.isTypeSupported&&o.mimeType&&(MediaRecorder.isTypeSupported(o.mimeType)||(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",o.mimeType),o.mimeType="audio"===t.type?"audio/webm":"video/webm"));try{d=new MediaRecorder(e,o),t.mimeType=o.mimeType}catch(t){d=new MediaRecorder(e)}o.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in d&&d.canRecordMimeType(o.mimeType)===!1&&(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",o.mimeType)),d.ignoreMutedMedia=t.ignoreMutedMedia===!0,d.ondataavailable=function(e){if(e.data&&s.push("ondataavailable: "+u(e.data.size)),"number"!=typeof t.timeSlice){if(!e.data||!e.data.size||e.data.size<100||n.blob)return void(n.recordingCallback&&(n.recordingCallback(new Blob([],{type:d.mimeType||o.mimeType||"video/webm"})),n.recordingCallback=null));n.blob=t.getNativeBlob?e.data:new Blob([e.data],{type:d.mimeType||o.mimeType||"video/webm"}),n.recordingCallback&&(n.recordingCallback(n.blob),n.recordingCallback=null)}else if(e.data&&e.data.size&&e.data.size>100&&(a.push(e.data),i(),"function"==typeof t.ondataavailable)){var r=t.getNativeBlob?e.data:new Blob([e.data],{type:d.mimeType||o.mimeType||"video/webm"});t.ondataavailable(r)}},d.onstart=function(){s.push("started")},d.onpause=function(){s.push("paused")},d.onresume=function(){s.push("resumed")},d.onstop=function(){s.push("stopped")},d.onerror=function(e){s.push("error: "+e),t.disableLogs||(e.name.toString().toLowerCase().indexOf("invalidstate")!==-1?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",e):e.name.toString().toLowerCase().indexOf("notsupported")!==-1?console.error("MIME type (",o.mimeType,") is not supported.",e):e.name.toString().toLowerCase().indexOf("security")!==-1?console.error("MediaRecorder security error",e):"OutOfMemory"===e.name?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"IllegalStreamModification"===e.name?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"OtherRecordingError"===e.name?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"GenericError"===e.name?console.error("The UA cannot provide the codec or recording option that has been requested.",e):console.error("MediaRecorder Error",e)),function(e){return!n.manuallyStopped&&d&&"inactive"===d.state?(delete t.timeslice,void d.start(6e5)):void setTimeout(e,1e3)}(),"inactive"!==d.state&&"stopped"!==d.state&&d.stop()},"number"==typeof t.timeSlice?(i(),d.start(t.timeSlice)):d.start(36e5),t.initCallback&&t.initCallback()},this.timestamps=[],this.stop=function(e){n.manuallyStopped=!0,d&&(this.recordingCallback=function(t){e&&e(t)},"recording"===d.state&&d.stop(),"number"==typeof t.timeSlice&&setTimeout(function(){n.blob=new Blob(a,{type:d.mimeType||t.mimeType||"video/webm"}),n.recordingCallback(n.blob)},100))},this.pause=function(){d&&"recording"===d.state&&d.pause()},this.resume=function(){d&&"paused"===d.state&&d.resume()},this.clearRecordedData=function(){a=[],d=null,n.timestamps=[]};var d;this.getInternalRecorder=function(){return d},this.blob=null,this.getState=function(){return d?d.state||"inactive":"inactive"};var s=[];this.getAllStates=function(){return s},"undefined"==typeof t.checkForInactiveTracks&&(t.checkForInactiveTracks=!1);var n=this;!function e(){if(d&&t.checkForInactiveTracks!==!1)return o()===!1?(t.disableLogs||console.log("MediaStream seems stopped."),void n.stop()):void setTimeout(e,1e3)}(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}/**
	 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
	 * @summary JavaScript standalone object for stereo audio recording.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef StereoAudioRecorder
	 * @class
	 * @example
	 * var recorder = new StereoAudioRecorder(MediaStream, {
	 *     sampleRate: 44100,
	 *     bufferSize: 4096
	 * });
	 * recorder.record();
	 * recorder.stop(function(blob) {
	 *     video.src = URL.createObjectURL(blob);
	 * });
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
	 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
	 */
function g(e,t){function i(){if(t.checkForInactiveTracks===!1)return!0;if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}function o(e,t){function i(e,t){function i(e,t,i){var n=Math.round(e.length*(t/i)),r=[],a=Number((e.length-1)/(n-1));r[0]=e[0];for(var d=1;d<n-1;d++){var s=d*a,c=Number(Math.floor(s)).toFixed(),u=Number(Math.ceil(s)).toFixed(),f=s-c;r[d]=o(e[c],e[u],f)}return r[n-1]=e[e.length-1],r}function o(e,t,i){return e+(t-e)*i}function n(e,t){for(var i=new Float64Array(t),o=0,n=e.length,r=0;r<n;r++){var a=e[r];i.set(a,o),o+=a.length}return i}function r(e,t){for(var i=e.length+t.length,o=new Float64Array(i),n=0,r=0;r<i;)o[r++]=e[n],o[r++]=t[n],n++;return o}function a(e,t,i){for(var o=i.length,n=0;n<o;n++)e.setUint8(t+n,i.charCodeAt(n))}var d=e.numberOfAudioChannels,s=e.leftBuffers.slice(0),c=e.rightBuffers.slice(0),u=e.sampleRate,f=e.internalInterleavedLength,l=e.desiredSampRate;2===d&&(s=n(s,f),c=n(c,f),l&&(s=i(s,l,u),c=i(c,l,u))),1===d&&(s=n(s,f),l&&(s=i(s,l,u))),l&&(u=l);var h;2===d&&(h=r(s,c)),1===d&&(h=s);var p=h.length,m=44+2*p,g=new ArrayBuffer(m),v=new DataView(g);a(v,0,"RIFF"),v.setUint32(4,44+2*p,!0),a(v,8,"WAVE"),a(v,12,"fmt "),v.setUint32(16,16,!0),v.setUint16(20,1,!0),v.setUint16(22,d,!0),v.setUint32(24,u,!0),v.setUint32(28,2*u,!0),v.setUint16(32,2*d,!0),v.setUint16(34,16,!0),a(v,36,"data"),v.setUint32(40,2*p,!0);for(var b=p,y=44,w=1,R=0;R<b;R++)v.setInt16(y,h[R]*(32767*w),!0),y+=2;return t?t({buffer:g,view:v}):void postMessage({buffer:g,view:v})}if(!D)return void i(e,function(e){t(e.buffer,e.view)});var o=n(i);o.onmessage=function(e){t(e.data.buffer,e.data.view),A.revokeObjectURL(o.workerURL)},o.postMessage(e)}function n(e){var t=A.createObjectURL(new Blob([e.toString(),";this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),i=new Worker(t);return i.workerURL=t,i}function r(e){if(!y){if(i()===!1&&(t.disableLogs||console.log("MediaStream seems stopped."),a.disconnect(),u=!1),!u)return void m.disconnect();w||(w=!0,t.onAudioProcessStarted&&t.onAudioProcessStarted(),t.initCallback&&t.initCallback());var o=e.inputBuffer.getChannelData(0);if(s.push(new Float32Array(o)),2===l){var n=e.inputBuffer.getChannelData(1);c.push(new Float32Array(n))}f+=v,d.recordingLength=f}}if(!e.getAudioTracks().length)throw"Your stream has no audio tracks.";t=t||{};var a,d=this,s=[],c=[],u=!1,f=0,l=2,h=t.desiredSampRate;t.leftChannel===!0&&(l=1),1===t.numberOfAudioChannels&&(l=1),t.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: ",l),"undefined"==typeof t.checkForInactiveTracks&&(t.checkForInactiveTracks=!0),this.record=function(){if(i()===!1)throw"Please make sure MediaStream is active.";s.length=c.length=0,f=0,m&&m.connect(a),w=y=!1,u=!0},this.stop=function(e){u=!1,o({desiredSampRate:h,sampleRate:b,numberOfAudioChannels:l,internalInterleavedLength:f,leftBuffers:s,rightBuffers:1===l?[]:c},function(t,i){d.blob=new Blob([i],{type:"audio/wav"}),d.buffer=new ArrayBuffer(i.buffer.byteLength),d.view=i,d.sampleRate=h||b,d.bufferSize=v,d.length=f,e&&e(d.blob),w=!1})},O.AudioContextConstructor||(O.AudioContextConstructor=new O.AudioContext);var p=O.AudioContextConstructor,m=p.createMediaStreamSource(e),g=[0,256,512,1024,2048,4096,8192,16384],v="undefined"==typeof t.bufferSize?4096:t.bufferSize;if(g.indexOf(v)===-1&&(t.disableLogs||console.warn("Legal values for buffer-size are "+JSON.stringify(g,null,"\t"))),p.createJavaScriptNode)a=p.createJavaScriptNode(v,l,l);else{if(!p.createScriptProcessor)throw"WebAudio API has no support on this browser.";a=p.createScriptProcessor(v,l,l)}m.connect(a),t.bufferSize||(v=a.bufferSize);var b="undefined"!=typeof t.sampleRate?t.sampleRate:p.sampleRate||44100;(b<22050||b>96e3)&&(t.disableLogs||console.warn("sample-rate must be under range 22050 and 96000.")),t.disableLogs||(console.log("sample-rate",b),console.log("buffer-size",v),t.desiredSampRate&&console.log("Desired sample-rate",t.desiredSampRate));var y=!1;this.pause=function(){y=!0},this.resume=function(){if(i()===!1)throw"Please make sure MediaStream is active.";return u?void(y=!1):(t.disableLogs||console.log("Seems recording has been restarted."),void this.record())},this.clearRecordedData=function(){this.pause(),s.length=c.length=0,f=0},this.name="StereoAudioRecorder",this.toString=function(){return this.name};var w=!1;a.onaudioprocess=r,a.connect(p.destination),this.leftchannel=s,this.rightchannel=c,this.numberOfAudioChannels=l,this.desiredSampRate=h,this.sampleRate=b}/**
	 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
	 * @summary HTML2Canvas recording into video WebM.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef CanvasRecorder
	 * @class
	 * @example
	 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true });
	 * recorder.record();
	 * recorder.stop(function(blob) {
	 *     video.src = URL.createObjectURL(blob);
	 * });
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
	 * @param {object} config - {disableLogs:true, initCallback: function}
	 */
function v(e,t){function i(){var t=document.createElement("canvas"),i=t.getContext("2d");return t.width=e.width,t.height=e.height,i.drawImage(e,0,0),t}function o(){if(f)return l=(new Date).getTime(),setTimeout(o,500);if("canvas"===e.nodeName.toLowerCase()){var n=(new Date).getTime()-l;return l=(new Date).getTime(),h.frames.push({image:i(),duration:n}),void(u&&setTimeout(o,t.frameInterval))}html2canvas(e,{grabMouse:"undefined"==typeof t.showMousePointer||t.showMousePointer,onrendered:function(e){var i=(new Date).getTime()-l;return i?(l=(new Date).getTime(),h.frames.push({image:e.toDataURL("image/webp",1),duration:i}),void(u&&setTimeout(o,t.frameInterval))):setTimeout(o,t.frameInterval)}})}if("undefined"==typeof html2canvas&&"canvas"!==e.nodeName.toLowerCase())throw"Please link: https://cdn.webrtc-experiment.com/screenshot.js";t=t||{},t.frameInterval||(t.frameInterval=10);var n=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(e){e in document.createElement("canvas")&&(n=!0)});var r=!(!window.webkitRTCPeerConnection&&!window.webkitGetUserMedia||!window.chrome),a=50,d=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);r&&d&&d[2]&&(a=parseInt(d[2],10)),r&&a<52&&(n=!1);var s,c;if(n)if(t.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),e instanceof HTMLCanvasElement)s=e;else{if(!(e instanceof CanvasRenderingContext2D))throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D.";s=e.canvas}else navigator.mozGetUserMedia&&(t.disableLogs||console.error("Canvas recording is NOT supported in Firefox."));var u;this.record=function(){if(u=!0,n){var e;"captureStream"in s?e=s.captureStream(25):"mozCaptureStream"in s?e=s.mozCaptureStream(25):"webkitCaptureStream"in s&&(e=s.webkitCaptureStream(25));try{var i=new B;i.addTrack(e.getVideoTracks()[0]),e=i}catch(e){}if(!e)throw"captureStream API are NOT available.";c=new m(e,{mimeType:"video/webm"}),c.record()}else h.frames=[],l=(new Date).getTime(),o();t.initCallback&&t.initCallback()},this.getWebPImages=function(i){if("canvas"!==e.nodeName.toLowerCase())return void i();var o=h.frames.length;h.frames.forEach(function(e,i){var n=o-i;t.disableLogs||console.log(n+"/"+o+" frames remaining"),t.onEncodingCallback&&t.onEncodingCallback(n,o);var r=e.image.toDataURL("image/webp",1);h.frames[i].image=r}),t.disableLogs||console.log("Generating WebM"),i()},this.stop=function(e){u=!1;var i=this;return n&&c?void c.stop(e):void this.getWebPImages(function(){h.compile(function(o){t.disableLogs||console.log("Recording finished!"),i.blob=o,i.blob.forEach&&(i.blob=new Blob([],{type:"video/webm"})),e&&e(i.blob),h.frames=[]})})};var f=!1;this.pause=function(){if(f=!0,c instanceof m)return void c.pause()},this.resume=function(){return f=!1,c instanceof m?void c.resume():void(u||this.record())},this.clearRecordedData=function(){this.pause(),h.frames=[]},this.name="CanvasRecorder",this.toString=function(){return this.name};var l=(new Date).getTime(),h=new I.Video(100)}/**
	 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
	 * @summary Video recording feature in Chrome.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef WhammyRecorder
	 * @class
	 * @example
	 * var recorder = new WhammyRecorder(mediaStream);
	 * recorder.record();
	 * recorder.stop(function(blob) {
	 *     video.src = URL.createObjectURL(blob);
	 * });
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
	 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
	 */
function b(e,t){function i(e){e="undefined"!=typeof e?e:10;var t=(new Date).getTime()-s;return t?a?(s=(new Date).getTime(),setTimeout(i,100)):(s=(new Date).getTime(),d.paused&&d.play(),f.drawImage(d,0,0,u.width,u.height),c.frames.push({duration:t,image:u.toDataURL("image/webp")}),void(r||setTimeout(i,e,e))):setTimeout(i,e,e)}function o(e){var t=-1,i=e.length;!function o(){return t++,t===i?void e.callback():void setTimeout(function(){e.functionToLoop(o,t)},1)}()}function n(e,t,i,n,r){var a=document.createElement("canvas");a.width=u.width,a.height=u.height;var d=a.getContext("2d"),s=[],c=t===-1,f=t&&t>0&&t<=e.length?t:e.length,l={r:0,g:0,b:0},h=Math.sqrt(Math.pow(255,2)+Math.pow(255,2)+Math.pow(255,2)),p=i&&i>=0&&i<=1?i:0,m=n&&n>=0&&n<=1?n:0,g=!1;o({length:f,functionToLoop:function(t,i){var o,n,r,a=function(){!g&&r-o<=r*m||(c&&(g=!0),s.push(e[i])),t()};if(g)a();else{var f=new Image;f.onload=function(){d.drawImage(f,0,0,u.width,u.height);var e=d.getImageData(0,0,u.width,u.height);o=0,n=e.data.length,r=e.data.length/4;for(var t=0;t<n;t+=4){var i={r:e.data[t],g:e.data[t+1],b:e.data[t+2]},s=Math.sqrt(Math.pow(i.r-l.r,2)+Math.pow(i.g-l.g,2)+Math.pow(i.b-l.b,2));s<=h*p&&o++}a()},f.src=e[i].image}},callback:function(){s=s.concat(e.slice(f)),s.length<=0&&s.push(e[e.length-1]),r(s)}})}t=t||{},t.frameInterval||(t.frameInterval=10),t.disableLogs||console.log("Using frames-interval:",t.frameInterval),this.record=function(){t.width||(t.width=320),t.height||(t.height=240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),u.width=t.canvas.width||320,u.height=t.canvas.height||240,f=u.getContext("2d"),t.video&&t.video instanceof HTMLVideoElement?(d=t.video.cloneNode(),t.initCallback&&t.initCallback()):(d=document.createElement("video"),h(e,d),d.onloadedmetadata=function(){t.initCallback&&t.initCallback()},d.width=t.video.width,d.height=t.video.height),d.muted=!0,d.play(),s=(new Date).getTime(),c=new I.Video,t.disableLogs||(console.log("canvas resolutions",u.width,"*",u.height),console.log("video width/height",d.width||u.width,"*",d.height||u.height)),i(t.frameInterval)};var r=!1;this.stop=function(e){r=!0;var i=this;setTimeout(function(){n(c.frames,-1,null,null,function(o){c.frames=o,t.advertisement&&t.advertisement.length&&(c.frames=t.advertisement.concat(c.frames)),c.compile(function(t){i.blob=t,i.blob.forEach&&(i.blob=new Blob([],{type:"video/webm"})),e&&e(i.blob)})})},10)};var a=!1;this.pause=function(){a=!0},this.resume=function(){a=!1,r&&this.record()},this.clearRecordedData=function(){this.pause(),c.frames=[]},this.name="WhammyRecorder",this.toString=function(){return this.name};var d,s,c,u=document.createElement("canvas"),f=u.getContext("2d")}/**
	 * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef GifRecorder
	 * @class
	 * @example
	 * var recorder = new GifRecorder(mediaStream || canvas || context, { width: 1280, height: 720, frameRate: 200, quality: 10 });
	 * recorder.record();
	 * recorder.stop(function(blob) {
	 *     img.src = URL.createObjectURL(blob);
	 * });
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
	 * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
	 */
function y(e,t){if("undefined"==typeof GIFEncoder)throw"Please link: https://cdn.webrtc-experiment.com/gif-recorder.js";t=t||{};var i=e instanceof CanvasRenderingContext2D||e instanceof HTMLCanvasElement;this.record=function(){function e(d){return o?setTimeout(function(){e(d)},100):(f=k(e),void 0===typeof c&&(c=d),void(d-c<90||(!i&&a.paused&&a.play(),i||r.drawImage(a,0,0,n.width,n.height),t.onGifPreview&&t.onGifPreview(n.toDataURL("image/png")),u.addFrame(r),c=d)))}i||(t.width||(t.width=a.offsetWidth||320),t.height||(t.height=a.offsetHeight||240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),n.width=t.canvas.width||320,n.height=t.canvas.height||240,a.width=t.video.width||320,a.height=t.video.height||240),u=new GIFEncoder,u.setRepeat(0),u.setDelay(t.frameRate||200),u.setQuality(t.quality||10),u.start(),d=Date.now();f=k(e),t.initCallback&&t.initCallback()},this.stop=function(){f&&M(f),s=Date.now(),this.blob=new Blob([new Uint8Array(u.stream().bin)],{type:"image/gif"}),u.stream().bin=[]};var o=!1;this.pause=function(){o=!0},this.resume=function(){o=!1},this.clearRecordedData=function(){u&&(this.pause(),u.stream().bin=[])},this.name="GifRecorder",this.toString=function(){return this.name};var n=document.createElement("canvas"),r=n.getContext("2d");if(i&&(e instanceof CanvasRenderingContext2D?(r=e,n=r.canvas):e instanceof HTMLCanvasElement&&(r=e.getContext("2d"),n=e)),!i){var a=document.createElement("video");a.muted=!0,a.autoplay=!0,h(e,a),a.play()}var d,s,c,u,f=null}function w(e){function t(e,i,o){if("createObjectURL"in m&&!o)try{i.src=m.createObjectURL(e)}catch(o){return void t(e,i,!0)}else"srcObject"in i?i.srcObject=e:"mozSrcObject"in i?i.mozSrcObject=e:alert("createObjectURL/srcObject both are not supported.")}function i(){if(!u){var e=c.length,t=!1,n=[];if(c.forEach(function(e){e.stream||(e.stream={}),e.stream.fullcanvas?t=e:n.push(e)}),t)f.width=t.stream.width,f.height=t.stream.height;else if(n.length){f.width=e>1?2*n[0].width:n[0].width;var r=1;3!==e&&4!==e||(r=2),5!==e&&6!==e||(r=3),7!==e&&8!==e||(r=4),9!==e&&10!==e||(r=5),f.height=n[0].height*r}else f.width=h.width||360,f.height=h.height||240;t&&t instanceof HTMLVideoElement&&o(t),n.forEach(function(e,t){o(e,t)}),setTimeout(i,h.frameInterval)}}function o(e,t){if(!u){var i=0,o=0,n=e.width,r=e.height;1===t&&(i=e.width),2===t&&(o=e.height),3===t&&(i=e.width,o=e.height),4===t&&(o=2*e.height),5===t&&(i=e.width,o=2*e.height),6===t&&(o=3*e.height),7===t&&(i=e.width,o=3*e.height),"undefined"!=typeof e.stream.left&&(i=e.stream.left),"undefined"!=typeof e.stream.top&&(o=e.stream.top),"undefined"!=typeof e.stream.width&&(n=e.stream.width),"undefined"!=typeof e.stream.height&&(r=e.stream.height),l.drawImage(e,i,o,n,r),"function"==typeof e.stream.onRender&&e.stream.onRender(l,i,o,n,r,t)}}function n(){u=!1;var t=r(),i=a();i&&i.getAudioTracks().forEach(function(e){t.addTrack(e)});var o;return e.forEach(function(e){e.fullcanvas&&(o=!0)}),t}function r(){s();var e;"captureStream"in f?e=f.captureStream():"mozCaptureStream"in f?e=f.mozCaptureStream():h.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features");var t=new g;return e.getVideoTracks().forEach(function(e){t.addTrack(e)}),f.stream=t,t}function a(){v.AudioContextConstructor||(v.AudioContextConstructor=new v.AudioContext),h.audioContext=v.AudioContextConstructor,h.audioSources=[],h.useGainNode===!0&&(h.gainNode=h.audioContext.createGain(),h.gainNode.connect(h.audioContext.destination),h.gainNode.gain.value=0);var t=0;if(e.forEach(function(e){if(e.getAudioTracks().length){t++;var i=h.audioContext.createMediaStreamSource(e);h.useGainNode===!0&&i.connect(h.gainNode),h.audioSources.push(i)}}),t)return h.audioDestination=h.audioContext.createMediaStreamDestination(),h.audioSources.forEach(function(e){e.connect(h.audioDestination)}),h.audioDestination.stream}function d(e){var i=document.createElement("video");return t(e,i),i.muted=!0,i.volume=0,i.width=e.width||h.width||360,i.height=e.height||h.height||240,i.play(),i}function s(t){c=[],t=t||e,t.forEach(function(e){if(e.getVideoTracks().length){var t=d(e);t.stream=e,c.push(t)}})}var c=[],u=!1,f=document.createElement("canvas"),l=f.getContext("2d");f.style="opacity:0;position:absolute;z-index:-1;top: -100000000;left:-1000000000; margin-top:-1000000000;margin-left:-1000000000;",(document.body||document.documentElement).appendChild(f),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var h=this,p=window.AudioContext;"undefined"==typeof p&&("undefined"!=typeof webkitAudioContext&&(p=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(p=mozAudioContext));var m=window.URL;"undefined"==typeof m&&"undefined"!=typeof webkitURL&&(m=webkitURL),"undefined"!=typeof navigator&&"undefined"==typeof navigator.getUserMedia&&("undefined"!=typeof navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),"undefined"!=typeof navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var g=window.MediaStream;"undefined"==typeof g&&"undefined"!=typeof webkitMediaStream&&(g=webkitMediaStream),"undefined"!=typeof g&&("getVideoTracks"in g.prototype||(g.prototype.getVideoTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks.forEach(function(t){t.kind.toString().indexOf("video")!==-1&&e.push(t)}),e},g.prototype.getAudioTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks.forEach(function(t){t.kind.toString().indexOf("audio")!==-1&&e.push(t)}),e}),"undefined"==typeof g.prototype.stop&&(g.prototype.stop=function(){this.getTracks().forEach(function(e){e.stop()})}));var v={};"undefined"!=typeof p?v.AudioContext=p:"undefined"!=typeof webkitAudioContext&&(v.AudioContext=webkitAudioContext),this.startDrawingFrames=function(){i()},this.appendStreams=function(t){if(!t)throw"First parameter is required.";t instanceof Array||(t=[t]),e.concat(t),t.forEach(function(e){if(e.getVideoTracks().length){var t=d(e);t.stream=e,c.push(t)}if(e.getAudioTracks().length&&h.audioContext){var i=h.audioContext.createMediaStreamSource(e);i.connect(h.audioDestination),h.audioSources.push(i)}})},this.releaseStreams=function(){c=[],u=!0,h.gainNode&&(h.gainNode.disconnect(),h.gainNode=null),h.audioSources.length&&(h.audioSources.forEach(function(e){e.disconnect()}),h.audioSources=[]),h.audioDestination&&(h.audioDestination.disconnect(),h.audioDestination=null),h.audioContext=null,l.clearRect(0,0,f.width,f.height),f.stream&&(f.stream.stop(),f.stream=null)},this.resetVideoStreams=function(e){!e||e instanceof Array||(e=[e]),s(e)},this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=n}/**
	 * MultiStreamRecorder can record multiple videos in single container.
	 * @summary Multi-videos recorder.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef MultiStreamRecorder
	 * @class
	 * @example
	 * var options = {
	 *     mimeType: 'video/webm'
	 * }
	 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
	 * recorder.record();
	 * recorder.stop(function(blob) {
	 *     video.src = URL.createObjectURL(blob);
	 *
	 *     // or
	 *     var blob = recorder.blob;
	 * });
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
	 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
	 */
function R(e,t){function i(){var t=[];return e.forEach(function(e){e.getVideoTracks().forEach(function(e){t.push(e)})}),t}e=e||[];var o,n,r=this;t=t||{mimeType:"video/webm",video:{width:360,height:240}},t.frameInterval||(t.frameInterval=10),t.video||(t.video={}),t.video.width||(t.video.width=360),t.video.height||(t.video.height=240),this.record=function(){o=new w(e),i().length&&(o.frameInterval=t.frameInterval||10,o.width=t.video.width||360,o.height=t.video.height||240,o.startDrawingFrames()),t.previewStream&&"function"==typeof t.previewStream&&t.previewStream(o.getMixedStream()),n=new m(o.getMixedStream(),t),n.record()},this.stop=function(e){n&&n.stop(function(t){r.blob=t,e(t),r.clearRecordedData()})},this.pause=function(){n&&n.pause()},this.resume=function(){n&&n.resume()},this.clearRecordedData=function(){n&&(n.clearRecordedData(),n=null),o&&(o.releaseStreams(),o=null)},this.addStreams=function(t){if(!t)throw"First parameter is required.";t instanceof Array||(t=[t]),e.concat(t),n&&o&&o.appendStreams(t)},this.resetVideoStreams=function(e){o&&(!e||e instanceof Array||(e=[e]),o.resetVideoStreams(e))},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}/**
	 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
	 * @summary Promises for {@link RecordRTC}
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef RecordRTCPromisesHandler
	 * @class
	 * @example
	 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
	 * recorder.startRecording()
	 *         .then(successCB)
	 *         .catch(errorCB);
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
	 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
	 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
	 * @requires {@link RecordRTC}
	 */
function T(e,t){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if("undefined"==typeof e)throw'First argument "MediaStream" is required.';var i=this;i.recordRTC=new a(e,t),this.startRecording=function(){return new Promise(function(e,t){try{i.recordRTC.startRecording(),e()}catch(e){t(e)}})},this.stopRecording=function(){return new Promise(function(e,t){try{i.recordRTC.stopRecording(function(t){i.blob=i.recordRTC.getBlob(),e(t)})}catch(e){t(e)}})},this.getDataURL=function(e){return new Promise(function(e,t){try{i.recordRTC.getDataURL(function(t){e(t)})}catch(e){t(e)}})},this.getBlob=function(){return i.recordRTC.getBlob()},this.blob=null}a.getFromDisk=function(e,t){if(!t)throw"callback is mandatory.";console.log("Getting recorded "+("all"===e?"blobs":e+" blob ")+" from disk!"),E.Fetch(function(i,o){"all"!==e&&o===e+"Blob"&&t&&t(i),"all"===e&&t&&t(i,o.replace("Blob",""))})},a.writeToDisk=function(e){console.log("Writing recorded blob(s) to disk!"),e=e||{},e.audio&&e.video&&e.gif?e.audio.getDataURL(function(t){e.video.getDataURL(function(i){e.gif.getDataURL(function(e){E.Store({audioBlob:t,videoBlob:i,gifBlob:e})})})}):e.audio&&e.video?e.audio.getDataURL(function(t){e.video.getDataURL(function(e){E.Store({audioBlob:t,videoBlob:e})})}):e.audio&&e.gif?e.audio.getDataURL(function(t){e.gif.getDataURL(function(e){E.Store({audioBlob:t,gifBlob:e})})}):e.video&&e.gif?e.video.getDataURL(function(t){e.gif.getDataURL(function(e){E.Store({videoBlob:t,gifBlob:e})})}):e.audio?e.audio.getDataURL(function(e){E.Store({audioBlob:e})}):e.video?e.video.getDataURL(function(e){E.Store({videoBlob:e})}):e.gif&&e.gif.getDataURL(function(e){E.Store({gifBlob:e})})},e.exports=a,o=[],n=function(){return a}.apply(t,o),!(void 0!==n&&(e.exports=n)),c.getFromDisk=a.getFromDisk,c.writeToDisk=a.writeToDisk,"undefined"!=typeof a&&(a.MRecordRTC=c);var S="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45";!function(e){e&&"undefined"==typeof window&&"undefined"!=typeof i&&(i.navigator={userAgent:S,getUserMedia:function(){}},i.console||(i.console={}),"undefined"!=typeof i.console.log&&"undefined"!=typeof i.console.error||(i.console.error=i.console.log=i.console.log||function(){console.log(arguments)}),"undefined"==typeof document&&(e.document={},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""}};return e},e.HTMLVideoElement=function(){}),"undefined"==typeof location&&(e.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&(e.screen={width:0,height:0}),"undefined"==typeof A&&(e.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),e.window=i)}("undefined"!=typeof i?i:null);var k=window.requestAnimationFrame;if("undefined"==typeof k)if("undefined"!=typeof webkitRequestAnimationFrame)k=webkitRequestAnimationFrame;else if("undefined"!=typeof mozRequestAnimationFrame)k=mozRequestAnimationFrame;else if("undefined"!=typeof msRequestAnimationFrame)k=msRequestAnimationFrame;else if("undefined"==typeof k){var C=0;k=function(e,t){var i=(new Date).getTime(),o=Math.max(0,16-(i-C)),n=setTimeout(function(){e(i+o)},o);return C=i+o,n}}var M=window.cancelAnimationFrame;"undefined"==typeof M&&("undefined"!=typeof webkitCancelAnimationFrame?M=webkitCancelAnimationFrame:"undefined"!=typeof mozCancelAnimationFrame?M=mozCancelAnimationFrame:"undefined"!=typeof msCancelAnimationFrame?M=msCancelAnimationFrame:"undefined"==typeof M&&(M=function(e){clearTimeout(e)}));var L=window.AudioContext;"undefined"==typeof L&&("undefined"!=typeof webkitAudioContext&&(L=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(L=mozAudioContext));var A=window.URL;"undefined"==typeof A&&"undefined"!=typeof webkitURL&&(A=webkitURL),"undefined"!=typeof navigator&&"undefined"==typeof navigator.getUserMedia&&("undefined"!=typeof navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),"undefined"!=typeof navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var U=!(navigator.userAgent.indexOf("Edge")===-1||!navigator.msSaveBlob&&!navigator.msSaveOrOpenBlob),x=!!window.opera||navigator.userAgent.indexOf("OPR/")!==-1,D=!x&&!U&&!!navigator.webkitGetUserMedia||l(),B=window.MediaStream;"undefined"==typeof B&&"undefined"!=typeof webkitMediaStream&&(B=webkitMediaStream),"undefined"!=typeof B&&("getVideoTracks"in B.prototype||(B.prototype.getVideoTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks().forEach(function(t){t.kind.toString().indexOf("video")!==-1&&e.push(t)}),e},B.prototype.getAudioTracks=function(){if(!this.getTracks)return[];var e=[];return this.getTracks().forEach(function(t){t.kind.toString().indexOf("audio")!==-1&&e.push(t)}),e}),"undefined"==typeof B.prototype.stop&&(B.prototype.stop=function(){this.getTracks().forEach(function(e){e.stop()})}));/**
	 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @example
	 * Storage.AudioContext === webkitAudioContext
	 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 */
var O={};"undefined"!=typeof L?O.AudioContext=L:"undefined"!=typeof webkitAudioContext&&(O.AudioContext=webkitAudioContext),"undefined"!=typeof a&&(a.Storage=O),"undefined"!=typeof a&&(a.MediaStreamRecorder=m),"undefined"!=typeof a&&(a.StereoAudioRecorder=g),"undefined"!=typeof a&&(a.CanvasRecorder=v),"undefined"!=typeof a&&(a.WhammyRecorder=b);/**
	 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
	 * @summary A real time javascript webm encoder based on a canvas hack.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @typedef Whammy
	 * @class
	 * @example
	 * var recorder = new Whammy().Video(15);
	 * recorder.add(context || canvas || dataURL);
	 * var output = recorder.compile();
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 */
var I=function(){function e(e){this.frames=[],this.duration=e||1,this.quality=.8}function t(e){var t=A.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (e) {"+e.name+"(e.data);}"],{type:"application/javascript"})),i=new Worker(t);return A.revokeObjectURL(t),i}function i(e){function t(e){var t=o(e);if(!t)return[];for(var n=3e4,r=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:l(t.duration),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:t.width,id:176},{data:t.height,id:186}]}]}]}]}],a=0,s=0;a<e.length;){var c=[],u=0;do c.push(e[a]),u+=e[a].duration,a++;while(a<e.length&&u<n);var f=0,h={id:524531317,data:i(s,f,c)};r[1].data.push(h),s+=u}return d(r)}function i(e,t,i){return[{data:e,id:231}].concat(i.map(function(e){var i=s({discardable:0,frame:e.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(t)});return t+=e.duration,{data:i,id:163}}))}function o(e){if(!e[0])return void postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});for(var t=e[0].width,i=e[0].height,o=e[0].duration,n=1;n<e.length;n++)o+=e[n].duration;return{duration:o,width:t,height:i}}function n(e){for(var t=[];e>0;)t.push(255&e),e>>=8;return new Uint8Array(t.reverse())}function r(e){return new Uint8Array(e.split("").map(function(e){return e.charCodeAt(0)}))}function a(e){var t=[],i=e.length%8?new Array(9-e.length%8).join("0"):"";e=i+e;for(var o=0;o<e.length;o+=8)t.push(parseInt(e.substr(o,8),2));return new Uint8Array(t)}function d(e){for(var t=[],i=0;i<e.length;i++){var o=e[i].data;"object"==typeof o&&(o=d(o)),"number"==typeof o&&(o=a(o.toString(2))),"string"==typeof o&&(o=r(o));var s=o.size||o.byteLength||o.length,c=Math.ceil(Math.ceil(Math.log(s)/Math.log(2))/8),u=s.toString(2),f=new Array(7*c+7+1-u.length).join("0")+u,l=new Array(c).join("0")+"1"+f;t.push(n(e[i].id)),t.push(a(l)),t.push(o)}return new Blob(t,{type:"video/webm"})}function s(e){var t=0;if(e.keyframe&&(t|=128),e.invisible&&(t|=8),e.lacing&&(t|=e.lacing<<1),e.discardable&&(t|=1),e.trackNum>127)throw"TrackNumber > 127 not supported";var i=[128|e.trackNum,e.timecode>>8,255&e.timecode,t].map(function(e){return String.fromCharCode(e)}).join("")+e.frame;return i}function c(e){for(var t=e.RIFF[0].WEBP[0],i=t.indexOf("*"),o=0,n=[];o<4;o++)n[o]=t.charCodeAt(i+3+o);var r,a,d;return d=n[1]<<8|n[0],r=16383&d,d=n[3]<<8|n[2],a=16383&d,{width:r,height:a,data:t,riff:e}}function u(e,t){return parseInt(e.substr(t+4,4).split("").map(function(e){var t=e.charCodeAt(0).toString(2);return new Array(8-t.length+1).join("0")+t}).join(""),2)}function f(e){for(var t=0,i={};t<e.length;){var o=e.substr(t,4),n=u(e,t),r=e.substr(t+4+4,n);t+=8+n,i[o]=i[o]||[],"RIFF"===o||"LIST"===o?i[o].push(f(r)):i[o].push(r)}return i}function l(e){return[].slice.call(new Uint8Array(new Float64Array([e]).buffer),0).map(function(e){return String.fromCharCode(e)}).reverse().join("")}var h=new t(e.map(function(e){var t=c(f(atob(e.image.slice(23))));return t.duration=e.duration,t}));postMessage(h)}return e.prototype.add=function(e,t){if("canvas"in e&&(e=e.canvas),"toDataURL"in e&&(e=e.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/gi.test(e))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:e,duration:t||this.duration})},e.prototype.compile=function(e){var o=t(i);o.onmessage=function(t){return t.data.error?void console.error(t.data.error):void e(t.data)},o.postMessage(this.frames)},{Video:e}}();"undefined"!=typeof a&&(a.Whammy=I);/**
	 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
	 * @summary Writing blobs into IndexedDB.
	 * @license {@link https://github.com/muaz-khan/RecordRTC#license|MIT}
	 * @author {@link http://www.MuazKhan.com|Muaz Khan}
	 * @example
	 * DiskStorage.Store({
	 *     audioBlob: yourAudioBlob,
	 *     videoBlob: yourVideoBlob,
	 *     gifBlob  : yourGifBlob
	 * });
	 * DiskStorage.Fetch(function(dataURL, type) {
	 *     if(type === 'audioBlob') { }
	 *     if(type === 'videoBlob') { }
	 *     if(type === 'gifBlob')   { }
	 * });
	 * // DiskStorage.dataStoreName = 'recordRTC';
	 * // DiskStorage.onError = function(error) { };
	 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
	 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
	 * @property {function} Store - This method stores blobs in IndexedDB.
	 * @property {function} onError - This function is invoked for any known/unknown error.
	 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
	 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
	 */
var E={init:function(){function e(e){e.createObjectStore(i.dataStoreName)}function t(){function e(e){t.objectStore(i.dataStoreName).get(e).onsuccess=function(t){i.callback&&i.callback(t.target.result,e)}}var t=o.transaction([i.dataStoreName],"readwrite");i.videoBlob&&t.objectStore(i.dataStoreName).put(i.videoBlob,"videoBlob"),i.gifBlob&&t.objectStore(i.dataStoreName).put(i.gifBlob,"gifBlob"),i.audioBlob&&t.objectStore(i.dataStoreName).put(i.audioBlob,"audioBlob"),e("audioBlob"),e("videoBlob"),e("gifBlob")}var i=this;if("undefined"==typeof indexedDB||"undefined"==typeof indexedDB.open)return void console.error("IndexedDB API are not available in this browser.");var o,n=1,r=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),a=indexedDB.open(r,n);a.onerror=i.onError,a.onsuccess=function(){if(o=a.result,o.onerror=i.onError,o.setVersion)if(o.version!==n){var r=o.setVersion(n);r.onsuccess=function(){e(o),t()}}else t();else t()},a.onupgradeneeded=function(t){e(t.target.result)}},Fetch:function(e){return this.callback=e,this.init(),this},Store:function(e){return this.audioBlob=e.audioBlob,this.videoBlob=e.videoBlob,this.gifBlob=e.gifBlob,this.init(),this},onError:function(e){console.error(JSON.stringify(e,null,"\t"))},dataStoreName:"recordRTC",dbName:null};"undefined"!=typeof a&&(a.DiskStorage=E),"undefined"!=typeof a&&(a.GifRecorder=y),"undefined"!=typeof a&&(a.MultiStreamRecorder=R),"undefined"!=typeof a&&(a.RecordRTCPromisesHandler=T)}).call(t,function(){return this}(),i(4))},function(e,t){e.exports=" <div> Hi </div> "},function(e,t,i){function o(e,t){for(var i=0;i<e.length;i++){var o=e[i],n=f[o.id];if(n){n.refs++;for(var r=0;r<n.parts.length;r++)n.parts[r](o.parts[r]);for(;r<o.parts.length;r++)n.parts.push(s(o.parts[r],t))}else{for(var a=[],r=0;r<o.parts.length;r++)a.push(s(o.parts[r],t));f[o.id]={id:o.id,refs:1,parts:a}}}}function n(e){for(var t=[],i={},o=0;o<e.length;o++){var n=e[o],r=n[0],a=n[1],d=n[2],s=n[3],c={css:a,media:d,sourceMap:s};i[r]?i[r].parts.push(c):t.push(i[r]={id:r,parts:[c]})}return t}function r(e,t){var i=p(),o=v[v.length-1];if("top"===e.insertAt)o?o.nextSibling?i.insertBefore(t,o.nextSibling):i.appendChild(t):i.insertBefore(t,i.firstChild),v.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");i.appendChild(t)}}function a(e){e.parentNode.removeChild(e);var t=v.indexOf(e);t>=0&&v.splice(t,1)}function d(e){var t=document.createElement("style");return t.type="text/css",r(e,t),t}function s(e,t){var i,o,n;if(t.singleton){var r=g++;i=m||(m=d(t)),o=c.bind(null,i,r,!1),n=c.bind(null,i,r,!0)}else i=d(t),o=u.bind(null,i),n=function(){a(i)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else n()}}function c(e,t,i,o){var n=i?"":o.css;if(e.styleSheet)e.styleSheet.cssText=b(t,n);else{var r=document.createTextNode(n),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(r,a[t]):e.appendChild(r)}}function u(e,t){var i=t.css,o=t.media,n=t.sourceMap;if(o&&e.setAttribute("media",o),n&&(i+="\n/*# sourceURL="+n.sources[0]+" */",i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var f={},l=function(e){var t;return function(){return"undefined"==typeof t&&(t=e.apply(this,arguments)),t}},h=l(function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())}),p=l(function(){return document.head||document.getElementsByTagName("head")[0]}),m=null,g=0,v=[];e.exports=function(e,t){t=t||{},"undefined"==typeof t.singleton&&(t.singleton=h()),"undefined"==typeof t.insertAt&&(t.insertAt="bottom");var i=n(e);return o(i,t),function(e){for(var r=[],a=0;a<i.length;a++){var d=i[a],s=f[d.id];s.refs--,r.push(s)}if(e){var c=n(e);o(c,t)}for(var a=0;a<r.length;a++){var s=r[a];if(0===s.refs){for(var u=0;u<s.parts.length;u++)s.parts[u]();delete f[s.id]}}}};var b=function(){var e=[];return function(t,i){return e[t]=i,e.filter(Boolean).join("\n")}}()},function(e,t,i){var o=i(2);"string"==typeof o&&(o=[[e.id,o,""]]);i(7)(o,{});o.locals&&(e.exports=o.locals)}])});